{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Desktop\\\\Sperner\\\\Modelizacion\\\\hector\\\\src\\\\componentes\\\\Decision.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport App from \"../App\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Decision() {\n  _s();\n  var _location$state, _location$state2;\n  const location = useLocation();\n  /*Guardamos las variables que hemos recibido de la página anterior*/\n  const occupantNames = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.occupantNames;\n  const apiData = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.apiData; //PARA ACCEDER A LOS DATOS RECIBIDOS POR LA API CREAR desde Inicio.js\n  const precios = apiData === null || apiData === void 0 ? void 0 : apiData.precios;\n  const decisor = apiData === null || apiData === void 0 ? void 0 : apiData.jugador; // Obtener el índice del decisor desde apiData\n\n  // lNodos: List[Tuple[int,Dict[str,Any]]]\n  //lAristas: List[Tuple[int,int]]\n  //nodo : int\n  //jugador : int\n  //precios : List[int]\n  //height : int\n  const navigate = useNavigate();\n  const [currentDecisionMaker, setCurrentDecisionMaker] = useState('');\n  useEffect(() => {\n    if (decisor && occupantNames) {\n      setCurrentDecisionMaker(occupantNames[decisor - 1]);\n    }\n  }, [decisor, occupantNames]);\n  const handleDecision = index => {\n    // Verifica que apiData tenga todos los datos necesarios\n    if (!apiData || !apiData.lNodos || !apiData.lAristas || apiData.nodo === undefined || apiData.height === undefined || apiData.jugador === undefined || !apiData.precios) {\n      console.error(\"Datos incompletos en apiData\");\n      return;\n    }\n    const {\n      lNodos,\n      lAristas,\n      nodo,\n      height\n    } = apiData;\n    const requestBody = {\n      lNodos,\n      lAristas,\n      nodo,\n      height,\n      decision: index\n    };\n    fetch('http://localhost:8000/Decision/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(requestBody)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Error en la solicitud');\n      }\n      return response.json();\n    }).then(data => {\n      const final = data.final || [];\n      const decisor = data.jugador;\n\n      // Verifica si final es una lista vacía o si el primer elemento tiene jugador -1\n      if (final.length === 0 || final.length > 0 && final[0]['jugador'] === -1) {\n        // Si la respuesta es null o el primer elemento tiene jugador -1, recarga la página con los outputs de la API\n        navigate(`/Inicio/${occupantNames[decisor - 1]}`, {\n          state: {\n            apiData: data,\n            occupantNames\n          }\n        });\n      } else {\n        // Si la respuesta no es null y el primer elemento no tiene jugador -1, navega a Final.js mandando el atributo final\n        navigate('/Final', {\n          state: {\n            apiData: {\n              final: data.final,\n              occupantNames\n            }\n          }\n        });\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  if (!occupantNames || !precios || !decisor) return null; // Agregar la validación para decisor\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-container-Decision\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Es hora calcular la renta!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"decision-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [currentDecisionMaker, \", elige la opci\\xF3n que m\\xE1s te convenga\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), occupantNames.map((occupant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"OPCI\\xD3N \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Habitaci\\xF3n \", index + 1, \" por \", precios[index], \" \\u20AC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-decision\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDecision(index),\n            children: precios[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Decision, \"0Mh+nu2lLtg5k/pgJA8a34+xda8=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Decision;\nexport default Decision;\nvar _c;\n$RefreshReg$(_c, \"Decision\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","App","useNavigate","jsxDEV","_jsxDEV","Decision","_s","_location$state","_location$state2","location","occupantNames","state","apiData","precios","decisor","jugador","navigate","currentDecisionMaker","setCurrentDecisionMaker","handleDecision","index","lNodos","lAristas","nodo","undefined","height","console","error","requestBody","decision","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","final","length","catch","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","occupant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Desktop/Sperner/Modelizacion/hector/src/componentes/Decision.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport function Decision() {\r\n  const location = useLocation();\r\n  /*Guardamos las variables que hemos recibido de la página anterior*/\r\n  const occupantNames = location.state?.occupantNames;\r\n  const apiData = location.state?.apiData; //PARA ACCEDER A LOS DATOS RECIBIDOS POR LA API CREAR desde Inicio.js\r\n  const precios = apiData?.precios;\r\n  const decisor = apiData?.jugador; // Obtener el índice del decisor desde apiData\r\n\r\n  // lNodos: List[Tuple[int,Dict[str,Any]]]\r\n  //lAristas: List[Tuple[int,int]]\r\n  //nodo : int\r\n  //jugador : int\r\n  //precios : List[int]\r\n  //height : int\r\n  const navigate = useNavigate(); \r\n  const [currentDecisionMaker, setCurrentDecisionMaker] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    if (decisor && occupantNames) {\r\n      setCurrentDecisionMaker(occupantNames[decisor - 1]);\r\n    }\r\n  }, [decisor, occupantNames]);\r\n\r\n  const handleDecision = (index) => {\r\n    // Verifica que apiData tenga todos los datos necesarios\r\n    if (!apiData || !apiData.lNodos || !apiData.lAristas || apiData.nodo === undefined || apiData.height === undefined || apiData.jugador === undefined || !apiData.precios) {\r\n      console.error(\"Datos incompletos en apiData\");\r\n      return;\r\n    }\r\n    const { lNodos, lAristas, nodo, height } = apiData;\r\n    const requestBody = { lNodos, lAristas, nodo, height, decision: index };\r\n  \r\n    fetch('http://localhost:8000/Decision/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(requestBody),\r\n\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error('Error en la solicitud');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      const final = data.final || [];\r\n      const decisor = data.jugador;\r\n\r\n      // Verifica si final es una lista vacía o si el primer elemento tiene jugador -1\r\n      if (final.length === 0 || (final.length > 0 && final[0]['jugador'] === -1)) {\r\n        // Si la respuesta es null o el primer elemento tiene jugador -1, recarga la página con los outputs de la API\r\n        navigate(`/Inicio/${occupantNames[decisor - 1]}`, {\r\n          state: { apiData: data, occupantNames },\r\n        });\r\n      } else {\r\n        // Si la respuesta no es null y el primer elemento no tiene jugador -1, navega a Final.js mandando el atributo final\r\n        navigate('/Final', {\r\n          state: {\r\n            apiData: {\r\n              final: data.final,\r\n              occupantNames,\r\n            }\r\n          },\r\n        });\r\n      \r\n       \r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  };\r\n  if (!occupantNames || !precios || !decisor) return null; // Agregar la validación para decisor\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"title-container-Decision\">\r\n        <h1>Es hora calcular la renta!</h1>\r\n      </div>\r\n      <div className=\"decision-box\">\r\n        <h2>{currentDecisionMaker}, elige la opción que más te convenga</h2>\r\n        {occupantNames.map((occupant, index) => (\r\n          <div key={index}>\r\n            <h3>OPCIÓN {index + 1}</h3>\r\n            <p>Habitación {index + 1} por {precios[index]} €</p>\r\n\r\n            <div className=\"button-decision\">\r\n              <button onClick={() => handleDecision(index)}>{precios[index]}</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Decision;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}