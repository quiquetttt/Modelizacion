{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Desktop\\\\Sperner\\\\Modelizacion\\\\hector\\\\src\\\\componentes\\\\Decision.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport App from \"../App\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Decision() {\n  _s();\n  var _location$state, _location$state2, _location$state3, _location$state4, _location$state5;\n  const location = useLocation();\n  /*Guardamos las variables que hemos recibido de la página anterior*/\n  const totalRent = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.totalRent;\n  const totalOccupants = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.totalOccupants;\n  const occupantNames = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.occupantNames;\n  const apiData = (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.apiData; //PARA ACCEDER A LOS DATOS RECIBIDOS POR LA API CREAR desde Inicio.js\n  // lNodos: List[Tuple[int,Dict[str,Any]]]\n  //lAristas: List[Tuple[int,int]]\n  //nodo : int\n  //jugador : int\n  //precios : List[int]\n  //height : int\n  const navigate = useNavigate();\n  const decisor = (_location$state5 = location.state) === null || _location$state5 === void 0 ? void 0 : _location$state5.decisor;\n  const handleDecision = index => {\n    // Extrae solo los atributos necesarios de apiData\n    const {\n      lNodos,\n      lAristas,\n      nodo,\n      height\n    } = apiData;\n    fetch('http://localhost:8000/Decision/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        apiData,\n        decision: index\n      })\n    }).then(response => response.json()).then(data => {\n      const final = data.final; // Extrae solo los atributos necesarios de data\n      const decisor = data.jugador;\n      if (final === null) {\n        // Si la respuesta es null, recarga la página con los outputs de la API\n        navigate(`/Inicio/${decisor}`, {\n          state: {\n            apiData: data\n          }\n        });\n      } else {\n        // Si la respuesta no es null, navega a Final.js\n        navigate('/Final', {\n          state: {\n            final\n          }\n        });\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  if (!occupantNames) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-container-Decision\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Es hora calcular la renta!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"decision-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [occupantNames[0], \", elige la opcion que mas te convenga\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), occupantNames.map((occupant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"OPCION \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Habitaci\\xF3n \", index + 1, \" por Precio\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-decision\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDecision(index),\n            children: \"Elegir opcion(index+1)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Decision, \"ZmJpvzBBf8J7VCgSKqUUk0eHjAY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Decision;\nexport default Decision;\nvar _c;\n$RefreshReg$(_c, \"Decision\");","map":{"version":3,"names":["React","useEffect","useLocation","App","useNavigate","jsxDEV","_jsxDEV","Decision","_s","_location$state","_location$state2","_location$state3","_location$state4","_location$state5","location","totalRent","state","totalOccupants","occupantNames","apiData","navigate","decisor","handleDecision","index","lNodos","lAristas","nodo","height","fetch","method","headers","body","JSON","stringify","decision","then","response","json","data","final","jugador","catch","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","occupant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Desktop/Sperner/Modelizacion/hector/src/componentes/Decision.js"],"sourcesContent":["import React, {useEffect} from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport function Decision() {\r\n  const location = useLocation();\r\n  /*Guardamos las variables que hemos recibido de la página anterior*/\r\n  const totalRent = location.state?.totalRent;\r\n  const totalOccupants = location.state?.totalOccupants;\r\n  const occupantNames = location.state?.occupantNames;\r\n  const apiData = location.state?.apiData; //PARA ACCEDER A LOS DATOS RECIBIDOS POR LA API CREAR desde Inicio.js\r\n  // lNodos: List[Tuple[int,Dict[str,Any]]]\r\n  //lAristas: List[Tuple[int,int]]\r\n  //nodo : int\r\n  //jugador : int\r\n  //precios : List[int]\r\n  //height : int\r\n  const navigate = useNavigate(); \r\n\r\n  const decisor = location.state?.decisor;\r\n\r\n \r\n  const handleDecision = (index) => {\r\n    // Extrae solo los atributos necesarios de apiData\r\n    const { lNodos, lAristas, nodo, height } = apiData;\r\n    fetch('http://localhost:8000/Decision/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ apiData, decision: index }),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const final = data.final; // Extrae solo los atributos necesarios de data\r\n      const decisor = data.jugador;\r\n      if (final === null) {\r\n        // Si la respuesta es null, recarga la página con los outputs de la API\r\n        navigate(`/Inicio/${decisor}`, {\r\n          state: { apiData: data },\r\n        });\r\n      } else {\r\n        // Si la respuesta no es null, navega a Final.js\r\n        navigate('/Final', {\r\n          state: { final },\r\n        });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  };\r\n\r\n\r\n  if (!occupantNames) return null;\r\n  return (\r\n    <div>\r\n      <div className=\"title-container-Decision\">\r\n        <h1>Es hora calcular la renta!</h1>\r\n      </div>\r\n      <div className=\"decision-box\">\r\n        <h2>{occupantNames[0]}, elige la opcion que mas te convenga</h2>\r\n        {occupantNames.map((occupant, index) => (\r\n          <div key={index}>\r\n            <h3>OPCION {index + 1}</h3>\r\n            <p>Habitación {index + 1} por Precio</p>\r\n\r\n            <div className=\"button-decision\">\r\n              <button onClick={() => handleDecision(index)}>Elegir opcion(index+1)</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Decision;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}